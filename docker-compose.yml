services:
  praktomat:
    container_name: ${COMPOSE_PROJECT_NAME}_praktomat
    image: praktomat
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - type: bind
        source: $HOME/work-data/$COMPOSE_PROJECT_NAME
        target: /home/praktomat/work-data
    depends_on:
      - postgresql
    networks:
      - database
      - praktomat
    labels:
      - traefik.enable=true
      - traefik.http.routers.praktomat-${COMPOSE_PROJECT_NAME}.rule=PathPrefix(`/${COMPOSE_PROJECT_NAME}`)
      - traefik.http.routers.praktomat-${COMPOSE_PROJECT_NAME}.entrypoints=websecure
      - traefik.http.routers.praktomat-${COMPOSE_PROJECT_NAME}.tls=$PRAKTOMAT_PRODUCTIVE
    environment:
      - COMPOSE_PROJECT_NAME
      - PRAKTOMAT_NAME
      - PRAKTOMAT_ADMIN
      - PRAKTOMAT_CHECKER_EXTERNAL_DIR
      - PRAKTOMAT_CHECKER_IMAGE
      - PRAKTOMAT_CHECKER_UID_MOD
      - PRAKTOMAT_CHECKER_WRITABLE
      - PRAKTOMAT_CHECKER_ENABLE_NETWORK
      - PRAKTOMAT_DOMAIN
  postgresql:
    container_name: ${COMPOSE_PROJECT_NAME}_db
    image: postgres:16.2-alpine
    volumes:
    - $PWD/postgresql/init.sh:/docker-entrypoint-initdb.d/init.sh
    - $HOME/postgresql/$COMPOSE_PROJECT_NAME:/var/lib/postgresql/data
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=superuser_password
    networks:
      - database
networks:
  database:
    name: ${COMPOSE_PROJECT_NAME}
  praktomat:
    external: true

